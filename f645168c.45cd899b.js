(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{104:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,d=u["".concat(o,".").concat(m)]||u[m]||s[m]||i;return a?r.a.createElement(d,l(l({ref:t},c),{},{components:a})):r.a.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},99:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(104)),o={id:"cause",title:"Cause"},l={unversionedId:"ruby/methods/cause",id:"ruby/methods/cause",isDocsHomePage:!1,title:"Cause",description:"Get All Causes",source:"@site/docs/ruby/methods/cause.md",slug:"/ruby/methods/cause",permalink:"/polen-docs/docs/ruby/methods/cause",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/ruby/methods/cause.md",version:"current",sidebar:"someSidebar",previous:{title:"Adicionando ao seu projeto",permalink:"/polen-docs/docs/ruby/ruby-install"},next:{title:"Donation Notify",permalink:"/polen-docs/docs/ruby/methods/notify-donation"}},b=[{value:"Get All Causes",id:"get-all-causes",children:[]},{value:"Get Category",id:"get-category",children:[]},{value:"Get Own Causes",id:"get-own-causes",children:[]}],c={toc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"get-all-causes"},"Get All Causes"),Object(i.b)("p",null,"Este m\xe9todo retorna todas as institui\xe7\xf5es cadastradas no Polen."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Recebe o argumento ",Object(i.b)("inlineCode",{parentName:"p"},"params")," que \xe9 um hash com os campos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"page"),": (opcional) n\xfamero de uma p\xe1gina especifica - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pageSize"),": (opcional) quantidade de items por p\xe1gina (por padr\xe3o tem o valor 100) - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Retorna um objeto com os m\xe9todos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"body"),": conte\xfado da resposta.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"results: ",Object(i.b)("inlineCode",{parentName:"li"},"[]"),"."),Object(i.b)("li",{parentName:"ul"},"pageNumber: ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},"nextPage: ",Object(i.b)("inlineCode",{parentName:"li"},"string"),".   "))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"code"),": status da requisi\xe7\xe3o.")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ruby"},"params = {\n  page: 20,\n  pageSize: 50\n}\n\nall_cause = polen.get_all_cause(params)\nputs all_cause.body\n")),Object(i.b)("h2",{id:"get-category"},"Get Category"),Object(i.b)("p",null,"Este m\xe9todo retorna todas as categorias de causas cadastradas no Polen."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Recebe o argumento ",Object(i.b)("inlineCode",{parentName:"p"},"params")," que \xe9 um hash com os campos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"page"),": n\xfamero de uma p\xe1gina especifica - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pageSize"),": quantidade de items por p\xe1gina (por padr\xe3o tem o valor 20) - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Retorna um objeto com os m\xe9todos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"body"),": conte\xfado da resposta.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"results: ",Object(i.b)("inlineCode",{parentName:"li"},"[]"),"."),Object(i.b)("li",{parentName:"ul"},"pageNumber: ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},"nextPage: ",Object(i.b)("inlineCode",{parentName:"li"},"string"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"code"),": status da requisi\xe7\xe3o.")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ruby"},"params = {\n  page: 0,\n  pageSize: 5\n}\n\ncategories = polen.get_cause_categories(params)\nputs categories.body\n")),Object(i.b)("h2",{id:"get-own-causes"},"Get Own Causes"),Object(i.b)("p",null,"Este m\xe9todo retorna as causas apoiadas por uma loja."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Recebe o argumento ",Object(i.b)("inlineCode",{parentName:"p"},"params")," que \xe9 um hash com os campos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"page"),": (opcional) n\xfamero de uma p\xe1gina especifica - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pageSize"),": (opcional) quantidade de items por p\xe1gina (por padr\xe3o tem o valor 20) - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),". "),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"storeId"),": (obrigat\xf3rio) identificador da loja - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),".\n_ ",Object(i.b)("inlineCode",{parentName:"li"},"userId"),": (opcional) filtra por institui\xe7\xf5es que o consumidor j\xe1 apoiou - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"city"),": (opcional) filtra por cidade - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"state"),": (opcinal) filtra por estado - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"onlySelected"),": (opcional) filtra por institui\xe7\xf5es selecionadas pelo usu\xe1rio - ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Retorna um objeto com os m\xe9todos:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"body"),": conte\xfado da resposta.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"results: ",Object(i.b)("inlineCode",{parentName:"li"},"[]"),"."),Object(i.b)("li",{parentName:"ul"},"pageNumber: ",Object(i.b)("inlineCode",{parentName:"li"},"number"),"."),Object(i.b)("li",{parentName:"ul"},"nextPage: ",Object(i.b)("inlineCode",{parentName:"li"},"string"),"."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"code"),": status da requisi\xe7\xe3o.")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ruby"},'params = {\n  page: 0,\n  pageSize: 5,\n  storeId: "id"\n}\n\nown_causes = polen.get_own_cause(params)\nputs own_causes.body\n')))}p.isMDXComponent=!0}}]);